/*
 * pool/mixins/grid.less 
 * ====================
 * Useful mixins used to define the layout
 *
 * Source: http://semantic.gs
 *
 * ----------------------------------------------------------------- */


/*-------------------------------------------------------------------*\
        Common Grid functions
\*-------------------------------------------------------------------*/

.width (@x:1, @from-width: @total-width) {
        width: @from-width*(((@gutter-width+@column-width)*@x) / @_gridsystem-width);
}

.row() {
        display: inline-block;
        width: @total-width*((@gutter-width + @_gridsystem-width)/@_gridsystem-width);
        margin: 0 @total-width*(((@gutter-width*.5)/@_gridsystem-width)*-1);
        .clearfix;
}

.column(@x:1, @from-width: @total-width) {
    float: left;
    .width (@x, @from-width);
}

.column-margin(@from-width: @total-width) {
        margin: 0 @from-width*((@gutter-width*.5)/@_gridsystem-width);
}

.offset(@offset:1) {
        margin-left: (@gutter-width+@column-width)*@offset + @total-width*((@gutter-width*.5)/@_gridsystem-width);
}

/*-------------------------------------------------------------------*\
        Clearfix
\*-------------------------------------------------------------------*/
.clearfix() {
        *zoom:1;
        
        &:before,
        &:after {
            content:"";
            display:table;
        }
        &:after {
            clear:both;
        }
}

/*-------------------------------------------------------------------*\
        Debugging functions
\*-------------------------------------------------------------------*/
.debugmessage(@message, @color: red ){
    body.debug::before{
        content: @message;
        font-weight: bold;
        display: block;
        text-align: center;
        background: @color;
        position: absolute;
        right: 0;
        left: 0;
        top: 0;
        z-index: 99;
    }
    body.debug {
           margin-top: 24px;
    }
}
